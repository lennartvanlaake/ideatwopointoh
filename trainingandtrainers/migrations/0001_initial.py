# Generated by Django 2.2.12 on 2020-04-13 11:19

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import trainingandtrainers.models
import wagtail.contrib.routable_page.models
import wagtail.core.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailcore', '0041_group_collection_permissions_verbose_name_plural'),
    ]

    operations = [
        migrations.CreateModel(
            name='BlankNewPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('body', wagtail.core.fields.RichTextField(blank=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='DebateContent',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('category', models.CharField(default='Debate', max_length=250)),
                ('date', models.DateField(auto_now=True, verbose_name='Training created')),
                ('targetAudience', models.CharField(choices=[('FR', 'Freshman'), ('SO', 'Sophomore'), ('JR', 'Junior'), ('SR', 'Senior'), ('GR', 'Graduate')], max_length=250)),
                ('level', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5')], max_length=250)),
                ('language', models.CharField(choices=[('English', 'English'), ('Dutch', 'Dutch'), ('German', 'German'), ('Slovak', 'Slovak'), ('Estionian', 'Estonian'), ('Latvian', 'Latvian'), ('Romanian', 'Romanian'), ('Macedonian', 'Macedonian')], max_length=250)),
                ('summary', models.CharField(max_length=3000)),
                ('training', models.FileField(blank=True, upload_to='trainings/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf'])])),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page', trainingandtrainers.models.SearchableTrainingContent),
        ),
        migrations.CreateModel(
            name='DebateContentCollection',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='IdeaEventIndex',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('intro', wagtail.core.fields.RichTextField(blank=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page', wagtail.contrib.routable_page.models.RoutablePageMixin),
        ),
        migrations.CreateModel(
            name='IdeaTrainerIndex',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('intro', wagtail.core.fields.RichTextField(blank=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page', wagtail.contrib.routable_page.models.RoutablePageMixin),
        ),
        migrations.CreateModel(
            name='IdeaTrainingIndex',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('intro', wagtail.core.fields.RichTextField(blank=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page', wagtail.contrib.routable_page.models.RoutablePageMixin),
        ),
        migrations.CreateModel(
            name='PedagogyContent',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('category', models.CharField(default='Pedagogy', max_length=250)),
                ('date', models.DateField(auto_now=True, verbose_name='Training created')),
                ('targetAudience', models.CharField(choices=[('FR', 'Freshman'), ('SO', 'Sophomore'), ('JR', 'Junior'), ('SR', 'Senior'), ('GR', 'Graduate')], max_length=250)),
                ('level', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5')], max_length=250)),
                ('language', models.CharField(choices=[('English', 'English'), ('Dutch', 'Dutch'), ('German', 'German'), ('Slovak', 'Slovak'), ('Estionian', 'Estonian'), ('Latvian', 'Latvian'), ('Romanian', 'Romanian'), ('Macedonian', 'Macedonian')], max_length=250)),
                ('summary', models.CharField(max_length=3000)),
                ('training', models.FileField(blank=True, upload_to='trainings/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf'])])),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page', trainingandtrainers.models.SearchableTrainingContent),
        ),
        migrations.CreateModel(
            name='PedagogyContentCollection',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='Trainer',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('profilePicture', models.ImageField(upload_to='trainers/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'png'])])),
                ('firstName', models.CharField(max_length=100)),
                ('lastName', models.CharField(max_length=100)),
                ('age', models.IntegerField()),
                ('city', models.CharField(max_length=100)),
                ('country', models.CharField(max_length=100)),
                ('languagesSpoken1', models.CharField(choices=[('English', 'English'), ('Dutch', 'Dutch'), ('German', 'German'), ('Slovak', 'Slovak'), ('Estionian', 'Estonian'), ('Latvian', 'Latvian'), ('Romanian', 'Romanian'), ('Macedonian', 'Macedonian')], max_length=250)),
                ('languagesSpoken2', models.CharField(blank=True, choices=[('English', 'English'), ('Dutch', 'Dutch'), ('German', 'German'), ('Slovak', 'Slovak'), ('Estionian', 'Estonian'), ('Latvian', 'Latvian'), ('Romanian', 'Romanian'), ('Macedonian', 'Macedonian')], max_length=250)),
                ('languagesSpoken3', models.CharField(blank=True, choices=[('English', 'English'), ('Dutch', 'Dutch'), ('German', 'German'), ('Slovak', 'Slovak'), ('Estionian', 'Estonian'), ('Latvian', 'Latvian'), ('Romanian', 'Romanian'), ('Macedonian', 'Macedonian')], max_length=250)),
                ('shortBio', models.CharField(max_length=3000)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='TrainerCollection',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='TrainingContent',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('category', models.CharField(default='Training', max_length=250)),
                ('date', models.DateField(auto_now=True, verbose_name='Training created')),
                ('targetAudience', models.CharField(choices=[('FR', 'Freshman'), ('SO', 'Sophomore'), ('JR', 'Junior'), ('SR', 'Senior'), ('GR', 'Graduate')], max_length=250)),
                ('level', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5')], max_length=250)),
                ('language', models.CharField(choices=[('English', 'English'), ('Dutch', 'Dutch'), ('German', 'German'), ('Slovak', 'Slovak'), ('Estionian', 'Estonian'), ('Latvian', 'Latvian'), ('Romanian', 'Romanian'), ('Macedonian', 'Macedonian')], max_length=250)),
                ('summary', models.CharField(max_length=3000)),
                ('training', models.FileField(upload_to='trainings/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf'])])),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page', trainingandtrainers.models.SearchableTrainingContent),
        ),
        migrations.CreateModel(
            name='TrainingContentCollection',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='TrainingEvent',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('Title', models.CharField(max_length=100)),
                ('date', models.DateTimeField(verbose_name='date and time of event')),
                ('street', models.CharField(default='', max_length=100, verbose_name='Street and number')),
                ('city', models.CharField(default='', max_length=100)),
                ('country', models.CharField(default='', max_length=100)),
                ('contactemail', models.CharField(blank=True, max_length=100, verbose_name='Contact Emailadresss')),
                ('contactwebsite', models.CharField(blank=True, max_length=100, verbose_name='Contact website')),
                ('description', models.CharField(default='', max_length=3000)),
                ('trainer1', models.CharField(default='', max_length=100)),
                ('trainer2', models.CharField(blank=True, max_length=100)),
                ('trainer3', models.CharField(blank=True, max_length=100)),
                ('typetraining', models.CharField(blank=True, default='Training', max_length=100, verbose_name='type of training')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='TrainingEventsCollection',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='TrainTheTrainerEventsCollection',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='TTTEvent',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('date', models.DateTimeField(verbose_name='date and time of event')),
                ('street', models.CharField(max_length=100, verbose_name='Street and number')),
                ('city', models.CharField(max_length=100)),
                ('country', models.CharField(max_length=100)),
                ('contactemail', models.CharField(blank=True, max_length=100, verbose_name='Contact Emailadresss')),
                ('contactwebsite', models.CharField(blank=True, max_length=100, verbose_name='Contact website')),
                ('description', models.CharField(max_length=3000)),
                ('trainer1', models.CharField(default='', max_length=100)),
                ('trainer2', models.CharField(blank=True, max_length=100)),
                ('trainer3', models.CharField(blank=True, max_length=100)),
                ('typetraining', models.CharField(blank=True, choices=[('Training', 'Training'), ('TTT', 'Train-the-Trainer')], max_length=100, verbose_name='type of training')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
    ]
