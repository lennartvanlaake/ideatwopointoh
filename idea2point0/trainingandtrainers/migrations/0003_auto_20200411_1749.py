# Generated by Django 2.2.12 on 2020-04-11 17:49

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import wagtail.core.fields


class Migration(migrations.Migration):

    dependencies = [
        ('wagtailmenus', '0023_remove_use_specific'),
        ('wagtailcore', '0041_group_collection_permissions_verbose_name_plural'),
        ('wagtailforms', '0003_capitalizeverbose'),
        ('wagtailredirects', '0006_redirect_increase_max_length'),
        ('trainingandtrainers', '0002_auto_20200411_1131'),
    ]

    operations = [
        migrations.CreateModel(
            name='AllContent',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('date', models.DateField(auto_now=True, verbose_name='Training created')),
                ('subject', models.CharField(max_length=100)),
                ('targetAudience', models.CharField(choices=[('FR', 'Freshman'), ('SO', 'Sophomore'), ('JR', 'Junior'), ('SR', 'Senior'), ('GR', 'Graduate')], max_length=250)),
                ('level', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5')], max_length=250)),
                ('category', models.CharField(choices=[('Training', 'Training'), ('Debate', 'Debate Content'), ('Pedagogy', 'Pedagogy Content')], max_length=250)),
                ('language', models.CharField(choices=[('English', 'English'), ('Dutch', 'Dutch'), ('German', 'German'), ('Slovak', 'Slovak'), ('Estionian', 'Estonian'), ('Latvian', 'Latvian'), ('Romanian', 'Romanian'), ('Macedonian', 'Macedonian')], max_length=250)),
                ('summary', models.CharField(max_length=3000)),
                ('training', models.FileField(upload_to='trainings/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf'])])),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='BlankNewPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('Title', wagtail.core.fields.RichTextField(blank=True)),
                ('body', wagtail.core.fields.RichTextField(blank=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='MasterTrainerPermission',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='SteeringComPermission',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='TrainerPermission',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='TrainingContent',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('date', models.DateField(auto_now=True, verbose_name='Training created')),
                ('subject', models.CharField(max_length=100)),
                ('targetAudience', models.CharField(choices=[('FR', 'Freshman'), ('SO', 'Sophomore'), ('JR', 'Junior'), ('SR', 'Senior'), ('GR', 'Graduate')], max_length=250)),
                ('level', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5')], max_length=250)),
                ('category', models.CharField(default='Training', max_length=250)),
                ('language', models.CharField(choices=[('English', 'English'), ('Dutch', 'Dutch'), ('German', 'German'), ('Slovak', 'Slovak'), ('Estionian', 'Estonian'), ('Latvian', 'Latvian'), ('Romanian', 'Romanian'), ('Macedonian', 'Macedonian')], max_length=250)),
                ('summary', models.CharField(max_length=3000)),
                ('training', models.FileField(upload_to='trainings/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf'])])),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='TTTEvent',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('Title', models.CharField(max_length=100)),
                ('date', models.DateTimeField(verbose_name='date and time of event')),
                ('street', models.CharField(max_length=100, verbose_name='Street and number')),
                ('city', models.CharField(max_length=100)),
                ('country', models.CharField(max_length=100)),
                ('contactemail', models.CharField(blank=True, max_length=100, verbose_name='Contact Emailadresss')),
                ('contactwebsite', models.CharField(blank=True, max_length=100, verbose_name='Contact website')),
                ('description', models.CharField(max_length=3000)),
                ('trainer1', models.CharField(default='', max_length=100)),
                ('trainer2', models.CharField(blank=True, max_length=100)),
                ('trainer3', models.CharField(blank=True, max_length=100)),
                ('typetraining', models.CharField(blank=True, choices=[('Training', 'Training'), ('TTT', 'Train-the-Trainer')], max_length=100, verbose_name='type of training')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.AddField(
            model_name='trainer',
            name='languagesSpoken1',
            field=models.CharField(choices=[('English', 'English'), ('Dutch', 'Dutch'), ('German', 'German'), ('Slovak', 'Slovak'), ('Estionian', 'Estonian'), ('Latvian', 'Latvian'), ('Romanian', 'Romanian'), ('Macedonian', 'Macedonian')], default='bla', max_length=250),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='trainer',
            name='languagesSpoken2',
            field=models.CharField(blank=True, choices=[('English', 'English'), ('Dutch', 'Dutch'), ('German', 'German'), ('Slovak', 'Slovak'), ('Estionian', 'Estonian'), ('Latvian', 'Latvian'), ('Romanian', 'Romanian'), ('Macedonian', 'Macedonian')], max_length=250),
        ),
        migrations.AddField(
            model_name='trainer',
            name='languagesSpoken3',
            field=models.CharField(blank=True, choices=[('English', 'English'), ('Dutch', 'Dutch'), ('German', 'German'), ('Slovak', 'Slovak'), ('Estionian', 'Estonian'), ('Latvian', 'Latvian'), ('Romanian', 'Romanian'), ('Macedonian', 'Macedonian')], max_length=250),
        ),
        migrations.AddField(
            model_name='trainingevent',
            name='typetraining',
            field=models.CharField(blank=True, default='Training', max_length=100, verbose_name='type of training'),
        ),
        migrations.AlterField(
            model_name='trainer',
            name='age',
            field=models.IntegerField(),
        ),
        migrations.AlterField(
            model_name='trainer',
            name='city',
            field=models.CharField(max_length=100),
        ),
        migrations.AlterField(
            model_name='trainer',
            name='country',
            field=models.CharField(max_length=100),
        ),
        migrations.AlterField(
            model_name='trainer',
            name='name',
            field=models.CharField(max_length=100),
        ),
        migrations.AlterField(
            model_name='trainer',
            name='shortBio',
            field=models.CharField(max_length=3000),
        ),
        migrations.DeleteModel(
            name='IdeaTraining',
        ),
    ]
